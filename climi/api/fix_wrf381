#!/usr/bin/env python3
from climi.uuuu.ffff import schF_keys_, pure_fn_, prg_
from climi.uuuu.cccc import cubesv_, get_xy_dim_
import iris
from iris.coords import DimCoord
from iris.fileformats.netcdf import UnknownCellMethodWarning
import numpy as np
import os
#import glob
import warnings
import argparse


def main():
    warnings.filterwarnings("ignore", category=UserWarning)
    warnings.filterwarnings("ignore", category=UnknownCellMethodWarning)
    parser = argparse.ArgumentParser("fix IPSL-WRF381P xy-dim coordinate")
    parser.add_argument("idir", type=str, help="folder")
    parser.add_argument("-k", "--keys", type=str,
                        help="keywords for restriction")
    args = parser.parse_args()
    idir = args.idir if args.idir else './'
    odir = idir + 'tmp/'
    os.makedirs(odir, exist_ok=True)
    #fn = glob.glob(idir + 'DTR_*_DMI-HIRHAM5_v1_*.nc')
    #o0 = iris.load_cube(idir + 'SfcWind_ICHEC-EC-EARTH_historical_r3i1p1_' +
    #                    'DMI-HIRHAM5_v1_EUR_season_current.nc')
    kkkk = args.keys.split(',') if args.keys else ()
    fn = schF_keys_(idir, 'IPSL-WRF381P_v1', *kkkk)
    o0 = iris.load_cube('/nobackup/rossby22/sm_chali/DATA/fx/'
                        'sftlf_EUR-11_ECMWF-ERAINT_evaluation_r0i0p0_'
                        'IPSL-WRF381P_v1_fx.nc')
    cx = o0.coord('grid_longitude')
    cxd = o0.coord_dims(cx)[0]
    cy = o0.coord('grid_latitude')
    cyd = o0.coord_dims(cy)[0]
    for i, ifn in enumerate(fn):
        print(prg_(i, len(fn)), ifn)
        o = iris.load_cube(ifn)
        if get_xy_dim_(o)[0] is None:
            print(ifn)
            dd = o.ndim - o0.ndim
            o.add_dim_coord(cx, (cxd + dd,))
            o.add_dim_coord(cy, (cyd + dd,))
            fn_ = '{}{}.nc'.format(odir, pure_fn_(ifn))
            print('save to', fn_)
            cubesv_(o, fn_)


if __name__ == '__main__':
    main()
