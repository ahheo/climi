#!/usr/bin/env python3

from climi.uuuu.ffff import prg_
from scipy.stats import linregress as _lr
import xarray as xr
import pandas as pd
import numpy as np
import igra
import argparse
import os


_djn = os.path.join


def main():
    parser = argparse.ArgumentParser("Restructure igra trend data")       
    parser.add_argument("--ys", type=int, help="year start")                                          
    parser.add_argument("--ye", type=int, help="year end")                                          
    args = parser.parse_args()
    y0, y1 = args.ys, args.ye
    _fD = dict(monthly='month', seasonal='season', annual='year')
    dir0 = '/home/clin/Documents/data/igra/v2/metadata'
    dir1 = '/home/clin/Documents/res_4/'
    dir2 = '/home/clin/Documents/res_5/'
    vs_ = ('winds', 'uwinda', 'vwinda')
    rr, pp = {}, {}
    os.makedirs(dir2, exist_ok=True)
    stations = pd.read_csv(_djn(dir0, 'monthly.csv'))                           
    nS = stations.id.count()
    for i, sid in enumerate(stations.id):
        #if i < 810:
        #    continue
        fn_r = _djn(dir1, '{}_{}-{}_r.nc'.format(sid, y0, y1))
        fn_p = _djn(dir1, '{}_{}-{}_p.nc'.format(sid, y0, y1))
        if os.path.isfile(fn_r):
            print(prg_(i, nS), sid + ': fe')
            a = xr.load_dataset(fn_r)
            b = xr.load_dataset(fn_p)
            for v_ in vs_:
                rr.setdefault(v_, np.full((nS,) + a[v_].shape, np.nan))
                rr[v_][i,:] = a[v_].values
                pp.setdefault(v_, np.full((nS,) + b[v_].shape, np.nan))
                pp[v_][i,:] = a[v_].values
    for v_ in vs_:
        fn = _djn(dir2, 'igra_tr_{}-{}'.format(y0, y1))
        if rr and pp:
            np.savez(fn, r=rr[v_], p=pp[v_])


if __name__ == '__main__':
    main()
